#!/usr/bin/env python

import argparse
import sys

MEMINFO = '/proc/meminfo'

k = ['MemTotal', 'MemFree']


def chk_mem(wfree, cfree):
    tmp = {}

    if wfree.endswith('%'):
        wfree = float(wfree.replace('%', ''))

    else:
        wfree = float(wfree)

    if cfree.endswith('%'):
        cfree = float(cfree.replace('%', ''))

    else:
        cfree = float(cfree)

    with open(MEMINFO, 'r') as fd:
        for line in fd:
            try:
                attr, val, __ = line.replace(':', '').split()
            except ValueError:
                attr, val = line.replace(':', '').split()

            if attr in k:
                tmp.update({attr: float(val)})

    free_mem = round(tmp.get('MemFree') * 100 / tmp.get('MemTotal'))

    if free_mem <= float(wfree):
        print "MEMORY WARNING - {pmem}% of free Memory left".format(pmem=free_mem)
        return 1

    elif free_mem <= float(cfree):
        print "MEMORY CRITICAL - {pmem}% of free Memory left".format(pmem=free_mem)
        return 2

    print "MEMORY OK - {pmem}% of free Memory left".format(pmem=free_mem)
    return 0

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('-w', '--wfree', metavar='percent', default='15%')
    parser.add_argument('-c', '--cfree', metavar='percent', default='5%')

    arguments = vars(parser.parse_args())

    sys.exit(chk_mem(**arguments))
